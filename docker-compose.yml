version: '3'
services:
  database:
    image: mysql:8.0.22
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - /mysql/conf.d:/etc/mysql/conf.d
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # init.sql을 컨테이너 내부의 초기화 디렉토리로 복사
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    networks:
      - network

  backend:
    build:
      context: ./spring
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_DRIVER: ${SPRING_DATASOURCE_DRIVER}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - network

  frontend:
    build:
      context: ./react
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - network

networks:
  network: